{-# LANGUAGE ForeignFunctionInterface #-}
module Dev.Pci.Hdaudio.Hdaudiovar where
import Data.Word
import Foreign.Ptr
import Foreign.Storable
import Kern.KernMutex
import Sys.Bus

hdaRead1 :: Ptr HdaudioSoftc -> BusSizeT -> IO Word8
hdaRead1 sc off = do
  memt <- peek =<< p_HdaudioSoftc_sc_memt sc
  memh <- peek =<< p_HdaudioSoftc_sc_memh sc
  busSpaceRead1 memt memh off

hdaWrite1 :: Ptr HdaudioSoftc -> BusSizeT -> Word8 -> IO ()
hdaWrite1 sc off val = do
  memt <- peek =<< p_HdaudioSoftc_sc_memt sc
  memh <- peek =<< p_HdaudioSoftc_sc_memh sc
  busSpaceWrite1 memt memh off val

hdaRead4 :: Ptr HdaudioSoftc -> BusSizeT -> IO Word32
hdaRead4 sc off = do
  memt <- peek =<< p_HdaudioSoftc_sc_memt sc
  memh <- peek =<< p_HdaudioSoftc_sc_memh sc
  busSpaceRead4 memt memh off

hdaWrite4 :: Ptr HdaudioSoftc -> BusSizeT -> Word32 -> IO ()
hdaWrite4 sc off val = do
  memt <- peek =<< p_HdaudioSoftc_sc_memt sc
  memh <- peek =<< p_HdaudioSoftc_sc_memh sc
  busSpaceWrite4 memt memh off val


foreign import primitive "const.HDAUDIO_MAX_STREAMS" e_HDAUDIO_MAX_STREAMS :: Int

--------------------------------------------------------------------------
-- Following code is generated by struct2hs command semi-automatically. --
--------------------------------------------------------------------------
newtype {-# CTYPE "struct hdaudio_softc" #-} HdaudioSoftc = HdaudioSoftc ()
foreign import primitive "const.sizeof(struct hdaudio_softc)"
  sizeOf_HdaudioSoftc :: Int
foreign import primitive "const.offsetof(struct hdaudio_softc, sc_stream_mtx)"
  offsetOf_HdaudioSoftc_sc_stream_mtx :: Int
p_HdaudioSoftc_sc_stream_mtx :: Ptr HdaudioSoftc -> IO (Ptr KmutexT)
p_HdaudioSoftc_sc_stream_mtx p = return $ plusPtr p $ offsetOf_HdaudioSoftc_sc_stream_mtx
foreign import primitive "const.offsetof(struct hdaudio_softc, sc_stream_mask)"
  offsetOf_HdaudioSoftc_sc_stream_mask :: Int
p_HdaudioSoftc_sc_stream_mask :: Ptr HdaudioSoftc -> IO (Ptr Word32)
p_HdaudioSoftc_sc_stream_mask p = return $ plusPtr p $ offsetOf_HdaudioSoftc_sc_stream_mask
foreign import primitive "const.offsetof(struct hdaudio_softc, sc_memt)"
  offsetOf_HdaudioSoftc_sc_memt :: Int
p_HdaudioSoftc_sc_memt :: Ptr HdaudioSoftc -> IO (Ptr BusSpaceTagT)
p_HdaudioSoftc_sc_memt p = return $ plusPtr p $ offsetOf_HdaudioSoftc_sc_memt
foreign import primitive "const.offsetof(struct hdaudio_softc, sc_memh)"
  offsetOf_HdaudioSoftc_sc_memh :: Int
p_HdaudioSoftc_sc_memh :: Ptr HdaudioSoftc -> IO (Ptr BusSpaceHandleT)
p_HdaudioSoftc_sc_memh p = return $ plusPtr p $ offsetOf_HdaudioSoftc_sc_memh
foreign import primitive "const.offsetof(struct hdaudio_softc, sc_stream)"
  offsetOf_HdaudioSoftc_sc_stream :: Int
p_HdaudioSoftc_sc_stream :: Ptr HdaudioSoftc -> Int -> IO (Ptr HdaudioStream)
p_HdaudioSoftc_sc_stream p i = return $ plusPtr p $ offsetOf_HdaudioSoftc_sc_stream + i * sizeOf_HdaudioStream
foreign import primitive "const.offsetof(struct hdaudio_softc, sc_corb_mtx)"
  offsetOf_HdaudioSoftc_sc_corb_mtx :: Int
p_HdaudioSoftc_sc_corb_mtx :: Ptr HdaudioSoftc -> IO (Ptr KmutexT)
p_HdaudioSoftc_sc_corb_mtx p = return $ plusPtr p $ offsetOf_HdaudioSoftc_sc_corb_mtx

newtype {-# CTYPE "struct hdaudio_stream" #-} HdaudioStream = HdaudioStream ()
foreign import primitive "const.sizeof(struct hdaudio_stream)"
  sizeOf_HdaudioStream :: Int
foreign import primitive "const.offsetof(struct hdaudio_stream, st_intr)"
  offsetOf_HdaudioStream_st_intr :: Int
p_HdaudioStream_st_intr :: Ptr HdaudioStream -> IO (Ptr (FunPtr ((Ptr HdaudioStream) -> IO Int)))
p_HdaudioStream_st_intr p = return $ plusPtr p $ offsetOf_HdaudioStream_st_intr
foreign import ccall "dynamic" call_HdaudioStream_st_intr ::
  FunPtr ((Ptr HdaudioStream) -> IO Int) -> (Ptr HdaudioStream) -> IO Int
